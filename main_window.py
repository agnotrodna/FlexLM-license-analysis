# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1759, 909)
        MainWindow.setMaximumSize(QtCore.QSize(1759, 909))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../Downloads/icons8-report-60.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setAutoFillBackground(True)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 10, 1371, 821))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tableView = QtWidgets.QTableView(self.horizontalLayoutWidget)
        self.tableView.setAutoFillBackground(True)
        self.tableView.setStyleSheet("")
        self.tableView.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.tableView.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.tableView.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        self.tableView.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableView.setObjectName("tableView")
        self.horizontalLayout.addWidget(self.tableView)
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(1380, 10, 371, 821))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.calendarWidget = QtWidgets.QCalendarWidget(self.verticalLayoutWidget)
        self.calendarWidget.setStyleSheet("")
        self.calendarWidget.setGridVisible(True)
        self.calendarWidget.setObjectName("calendarWidget")
        self.verticalLayout.addWidget(self.calendarWidget)
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(10, 830, 1741, 41))
        self.graphicsView.setStyleSheet("background-color: rgb(0, 172, 226);")
        self.graphicsView.setObjectName("graphicsView")
        self.labelNANA = QtWidgets.QLabel(self.centralwidget)
        self.labelNANA.setGeometry(QtCore.QRect(850, 830, 81, 41))
        self.labelNANA.setText("")
        self.labelNANA.setPixmap(QtGui.QPixmap("../../Downloads/vg0px7l3ojr37vlu73gw1qzg8rqvclyz.jpg"))
        self.labelNANA.setScaledContents(True)
        self.labelNANA.setObjectName("labelNANA")
        self.labelCSOFT = QtWidgets.QLabel(self.centralwidget)
        self.labelCSOFT.setGeometry(QtCore.QRect(850, 830, 81, 41))
        self.labelCSOFT.setText("")
        self.labelCSOFT.setPixmap(QtGui.QPixmap("../../Downloads/CSOFT.png"))
        self.labelCSOFT.setScaledContents(True)
        self.labelCSOFT.setObjectName("labelCSOFT")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1759, 21))
        self.menubar.setObjectName("menubar")
        self.menuOpen = QtWidgets.QMenu(self.menubar)
        self.menuOpen.setObjectName("menuOpen")
        self.menuOptions = QtWidgets.QMenu(self.menubar)
        self.menuOptions.setObjectName("menuOptions")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionClose = QtWidgets.QAction(MainWindow)
        self.actionClose.setObjectName("actionClose")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionLight_theme = QtWidgets.QAction(MainWindow)
        self.actionLight_theme.setCheckable(False)
        self.actionLight_theme.setObjectName("actionLight_theme")
        self.actionDark_theme = QtWidgets.QAction(MainWindow)
        self.actionDark_theme.setObjectName("actionDark_theme")
        self.action = QtWidgets.QAction(MainWindow)
        self.action.setObjectName("action")
        self.menuOpen.addAction(self.actionOpen)
        self.menuOpen.addAction(self.action)
        self.menuOpen.addAction(self.actionClose)
        self.menuOptions.addAction(self.actionLight_theme)
        self.menuOptions.addAction(self.actionDark_theme)
        self.menubar.addAction(self.menuOpen.menuAction())
        self.menubar.addAction(self.menuOptions.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "FlexLM License Analyst"))
        self.menuOpen.setTitle(_translate("MainWindow", "Файл"))
        self.menuOptions.setTitle(_translate("MainWindow", "Вендор"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionClose.setText(_translate("MainWindow", "Закрыть приложение"))
        self.actionOpen.setText(_translate("MainWindow", "Подгрузить файл"))
        self.actionLight_theme.setText(_translate("MainWindow", "Nanosoft"))
        self.actionDark_theme.setText(_translate("MainWindow", "CSoft"))
        self.action.setText(_translate("MainWindow", "Сформировать отчет"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
